// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model DaysLoaded {
  id  Int    @id @default(autoincrement())
  day String @unique
}

enum MatchStatus {
  FINISHED
  SCHEDULED
  FIRST_HALF
  HALFTIME
  SECOND_HALF
}

model Match {
  id Int @id

  homeScore Int
  awayScore Int
  startDate DateTime
  elapsed   Int
  status    MatchStatus

  competitionId Int
  competition   Competition @relation(fields: [competitionId], references: [id])

  homeTeamId Int
  awayTeamId Int
  homeTeam   Team @relation("HomeTeam", fields: [homeTeamId], references: [id])
  awayTeam   Team @relation("AwayTeam", fields: [awayTeamId], references: [id])

  messages     Message[]
  groupMembers GroupMember[]
}

model Team {
  id   Int    @id
  name String
  logo String

  homeMatches Match[] @relation("HomeTeam")
  awayMatches Match[] @relation("AwayTeam")
}

model Competition {
  id   Int    @id
  name String
  logo String

  matches Match[]
}

model User {
  id     String @id
  email  String @unique
  avatar String

  messages    Message[]
  PushToken   PushToken[]
  GroupMember GroupMember[]
}

model PushToken {
  id     String @id @default(uuid())
  token  String @unique
  userId String

  user User @relation(fields: [userId], references: [id])
}

model Message {
  id        String   @id @default(uuid())
  text      String
  createdAt DateTime @default(now())
  elapsed   Int

  authorId String
  author   User   @relation(fields: [authorId], references: [id])

  matchId Int
  match   Match @relation(fields: [matchId], references: [id])
}

model GroupMember {
  id     Int    @id @default(autoincrement())
  userId String
  user   User   @relation(fields: [userId], references: [id])

  matchId Int
  match   Match @relation(fields: [matchId], references: [id])
}
